{"version":3,"sources":["images/logo.svg","components/Logo.js","functions/Utils.js","components/DrinkDetails.js","api/thecocktaildb.js","components/Tooltip.js","components/NavigationBar.js","components/Checkbox.js","components/FilterBlock.js","components/SideBar.js","components/DrinkThumbnail.js","components/Pagination.js","components/DrinksList.js","components/Spinner.js","components/SearchTermBlock.js","components/InformationTab.js","components/QueryTermBlock.js","components/DrinksDisplay.js","components/SearchBar.js","functions/IngredientsList.js","components/InputTag.js","components/AutocompleteSearch.js","components/AutocompleteBar.js","components/SuggestionsList.js","pages/WelcomePage.js","pages/ApplicationPage.js","pages/HomePage.js","pages/IngredientsPage.js","components/Page.js","App.js","index.js"],"names":["Logo","history","useHistory","className","to","location","pathname","includes","src","mainLogo","alt","cleanFilterName","category","split","join","filterByQuery","drinksData","queryArray","drinks","undefined","resultArr","forEach","drink","drinkFilters","push","strAlcoholic","strCategory","strGlass","makeDifficulty","filter","k","isNaN","every","v","ingredientCount","data","drinkIndex","ingList","x","ing","toLowerCase","filterByUrlTerms","ingredients","tempDrinkStore","ingrListLowerCase","Object","values","map","i","elem","length","updateDrinkDataValues","dataSource","dataSourceStore","keys","index","ingredientQuantity","difficulty","secondGlassWord","lowerCaseWord","glassArray","fixedGlassText","cleanQueryAtIndex","arr","position","amount","array","splice","removeQueryTerm","queryValue","mainPath","cleanedQuery","replace","setStars","nr","stars","style","color","textShadow","item","setStarsFull","DrinkDetails","drinkId","useParams","useState","drinkData","setDrinkData","useEffect","a","axios","get","params","dataUpdated","getDrink","displayIngredients","ingredientsData","ingr","ignWrap","ingredientsList","ingredient","entries","title","strDrink","strDrinkThumb","strInstructions","instructionSteps","getDrinksbyName","url","searchTerm","s","getDrinksbyIngredient","Tooltip","NavigationBar","termPresent","Checkbox","filterData","filterCategory","unlockCheckbox","prefilteredData","boxClicked","setBoxClicked","urlStats","useLocation","currentQuery","search","queryList","queryString","parse","boxChecked","flat","term","type","checked","value","onChange","pageQueryPart","substring","intitialQuery","fullPathQuery","replaceAll","disabled","id","htmlFor","filterQuantity","drinkQuantity","FilterBlock","unfilteredDrinksData","filterStatus","setFilterStatus","countDistintByType","searchType","alcoholList","counts","sortedArray","sort","b","countCopy","filters","buttonName","slice","onClick","filterTypes","SideBar","header","displayClearButton","DrinkThumbnail","imageLoaded","idDrink","state","onLoad","Pagination","resetSpinnerPag","drinksPerPage","totalDrinks","paginate","pageNumbers","pageQuery","pageQueryFull","currentPageNumber","pageNr","parseInt","totalPageNr","Math","ceil","setActivePage","number","page","disablePage","window","scrollTo","setPrevButton","href","e","preventDefault","onClickHandler","lastPage","setNextButton","DrinksList","totalDrinksData","Spinner","role","SearchTermBlock","termQuantity","setSearchTerm","searchTerms","InformationTab","drinksQuantity","setDrinksWord","QueryTermBlock","cleanedQueryArray","queryArr","setFixedValues","mainValue","queryTerms","termToReplace","DrinksDisplay","loading","display","SearchBar","resetDrinkList","resetSpinner","input","setInput","currentPath","placeholderTxt","setPlaceholderTxt","setPath","urlTerm","clearInput","onKeyPress","charCode","target","placeholder","InputTag","tagName","deleteTags","stopPropagation","AutocompleteSearch","spinnerLoading","setIngredient","selectedItems","setSelectedItems","ingredientsArr","setIngredientsArr","urlTermsArr","dropdownActive","setDropdownActive","wrapperRef","useRef","inputRef","setPlaceholder","urlTerms","cleanedIngredientsArr","ingrArr","findIndex","clearInputArea","current","innerText","tags","indexOf","ingrdient","unshift","focus","constructedPath","document","addEventListener","outsideClickHandler","removeEventListener","contentWrap","contains","onDropdownSelectHandler","currentTarget","setTags","onKeyDown","keyCode","lastElement","ref","lockInputEnter","onInput","textContent","onChangeHandler","data-placeholder","contentEditable","filteredIngredients","renderAutocomplete","AutocompleteBar","SuggestionsConfig","SuggestionsList","termCheck","suggestion","removeComma","suggestions","WelcomePage","ApplicationPage","dataLoaded","initialData","currentTerm","setLoading","counter","currentPage","setCurrentPage","indexOfLastDrink","indexOfFirstDrink","currentDrinks","ing1","pageNumber","HomePage","setDrinksData","filteredDrinksData","setDataLoaded","getDrinks","IngredientsPage","setCurrentTerm","drinkList","promises","searchTermEach","then","response","Promise","all","urlData","Page","props","children","App","console","warn","path","render","match","ing2","ing3","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.0debbf7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.06fb4724.svg\";","import React from 'react';\r\nimport '../css/Logo.css';\r\nimport mainLogo from '../images/logo.svg';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Logo = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const setPath = () => {\r\n        if (history.location.pathname.includes('/ingredients')) {\r\n            return '/ingredients';\r\n        }\r\n        else {\r\n            return '/';\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className='Logo'>\r\n            <div className='img-wrapper'>\r\n                <Link to={setPath()}>\r\n                    <img src={mainLogo} alt={'logo'} />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;","export const cleanFilterName = (category) => {\r\n    //const removeSpace = category.split(' ').join('').toLowerCase();\r\n    const filterType = category.split('/').join('');\r\n\r\n    return filterType;\r\n}\r\n\r\nexport const filterByQuery = (drinksData, queryArray) => {\r\n    let drinks = [];\r\n\r\n    if (drinksData !== undefined) {\r\n        drinks = [...drinksData];\r\n    }\r\n\r\n    const resultArr = [];\r\n    drinks.forEach(drink => {\r\n        const drinkFilters = [];\r\n\r\n        drinkFilters.push(cleanFilterName(drink.strAlcoholic));\r\n        drinkFilters.push(cleanFilterName(drink.strCategory));\r\n        drinkFilters.push(cleanFilterName(drink.strGlass));\r\n        drinkFilters.push(cleanFilterName(drink.makeDifficulty));\r\n\r\n        const filterApplied = queryArray.filter(k => !isNaN(k) === false).every(v => drinkFilters.includes(v));\r\n        if (filterApplied === true) {\r\n            resultArr.push(drink);\r\n        }\r\n    });\r\n\r\n    return resultArr;\r\n\r\n};\r\n\r\nexport const ingredientCount = (data, drinkIndex) => {\r\n    let ingList = [];\r\n\r\n    for (let x = 1; x <= 15; x++) {\r\n        let ing = data[drinkIndex]['strIngredient' + x];\r\n\r\n        if (ing !== null && ing !== '') {\r\n            ingList.push(ing.toLowerCase());\r\n        }\r\n    }\r\n\r\n    return ingList;\r\n};\r\n\r\nexport const filterByUrlTerms = (drinksData, ingredients) => {\r\n    let tempDrinkStore = [];\r\n    const ingrList = Object.values(ingredients);\r\n    const ingrListLowerCase = ingrList.map(v => v.toLowerCase());\r\n\r\n    for (let i = 0; i < drinksData.length; i++) {\r\n        if (ingrListLowerCase.every(elem => ingredientCount(drinksData, i).includes(elem))) {\r\n            tempDrinkStore.push(drinksData[i])\r\n        }\r\n    };\r\n    return tempDrinkStore;\r\n};\r\n\r\n\r\n\r\nexport const updateDrinkDataValues = (dataSource) => {\r\n    let dataSourceStore = [];\r\n\r\n    if(dataSource !== undefined){\r\n        dataSourceStore = dataSource;\r\n    };\r\n\r\n    Object.keys(dataSourceStore).forEach(function (index) {\r\n\r\n        const ingredientQuantity = ingredientCount(dataSourceStore, index).length;\r\n        dataSourceStore[index].ingredientCount = `items-${ingredientQuantity}`;\r\n\r\n        let difficulty = null;\r\n\r\n        if (ingredientQuantity <= 3) {\r\n            difficulty = '1-easy';\r\n        }\r\n        else if (ingredientQuantity <= 6) {\r\n            difficulty = '2-medium';\r\n        }\r\n        else {\r\n            difficulty = '3-hard';\r\n        }\r\n\r\n        dataSourceStore[index].makeDifficulty = difficulty;\r\n\r\n        const secondGlassWord = dataSourceStore[index].strGlass.split(' ')[1];\r\n\r\n        if (secondGlassWord !== undefined) {\r\n            const lowerCaseWord = secondGlassWord.toLowerCase();\r\n            let glassArray = dataSourceStore[index].strGlass.split(' ');\r\n            glassArray[1] = lowerCaseWord;\r\n            const fixedGlassText = glassArray.join(' ')\r\n            dataSourceStore[index].strGlass = fixedGlassText;\r\n        }\r\n\r\n    });\r\n};\r\n\r\nexport const cleanQueryAtIndex = (arr, position, amount) => {\r\n    let array = arr.split('');\r\n    array.splice(position, amount);\r\n    array = array.join('');\r\n    return array;\r\n};\r\n\r\nexport const removeQueryTerm = (history, queryValue, mainPath) => {\r\n    if (queryValue[1] === '&') {\r\n        history.push(cleanQueryAtIndex(queryValue, 1, 1));\r\n    }\r\n    else if (queryValue[queryValue.length - 1] === '&') {\r\n        history.push(cleanQueryAtIndex(queryValue, queryValue.length - 1, 1));\r\n    }\r\n    else {\r\n        var cleanedQuery = queryValue.replace(\"&&\", \"&\");\r\n        history.push(`${mainPath}${cleanedQuery}`);\r\n    }\r\n};\r\n\r\nexport const setStars = (nr) => {\r\n    const stars = [];\r\n    for (var i = 0; i < nr; i++) {\r\n        stars.push(<i key={i} style={{ color: '#F9E990', textShadow: '0 0 0.06em #000' }} className=\"fas fa-star\"></i>);\r\n    };\r\n\r\n    return (\r\n        <span>\r\n            {stars.map((item) => {\r\n                return (\r\n                    item\r\n                )\r\n            })}\r\n        </span>\r\n    )\r\n};\r\n\r\nexport const setStarsFull = (nr) => {\r\n    const stars = [];\r\n    const maxStars = 3;\r\n    for (var i = 0; i < nr; i++) {\r\n        stars.push(<i key={`first${i}`} style={{ color: '#F9E990', textShadow: '-0.06em 0 #000, 0 0.06em #000, 0.06em 0 #000, 0 -0.06em #000' }} className=\"fas fa-star\"></i>);\r\n    };\r\n\r\n    for (var x = 0; x < maxStars - nr; x++) {\r\n        stars.push(<i key={`second${x}`} style={{ color: '#fff', textShadow: '-0.06em 0 #000, 0 0.06em #000, 0.06em 0 #000, 0 -0.06em #000' }} className=\"fas fa-star\"></i>);\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            {stars.map((item) => {\r\n                return (\r\n                    item\r\n                )\r\n            })}\r\n        </span>\r\n    )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Logo from '../components/Logo';\r\nimport '../css/DrinkDetails.css';\r\nimport { updateDrinkDataValues, setStarsFull } from '../functions/Utils';\r\n\r\nconst DrinkDetails = () => {\r\n    const { drinkId } = useParams();\r\n    const [drinkData, setDrinkData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getDrink = async () => {\r\n            const { data } = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/lookup.php', {\r\n                params: {\r\n                    i: drinkId\r\n                }\r\n            });\r\n\r\n            let dataUpdated = data.drinks;\r\n            updateDrinkDataValues(dataUpdated);\r\n            setDrinkData(dataUpdated[0]);\r\n        };\r\n        getDrink();\r\n    }, []); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n    const ingredientsList = (data) => {\r\n\r\n        let ingredientsData = [];\r\n\r\n        for (let i = 1; i <= 15; i++) {\r\n            let ingr = data['strIngredient' + i];\r\n            let amount = data['strMeasure' + i];\r\n\r\n            if (ingr !== null && ingr !== undefined && ingr !== '') {\r\n                let ignWrap = [];\r\n                ignWrap.push(ingr)\r\n\r\n                if (amount === null) {\r\n                    ignWrap.push('as per preference')\r\n                }\r\n                else {\r\n                    ignWrap.push(amount)\r\n                }\r\n\r\n                ingredientsData.push(ignWrap)\r\n            }\r\n\r\n        }\r\n\r\n        return (ingredientsData);\r\n    };\r\n\r\n    const displayIngredients = ingredientsList(drinkData).map((ingredient) => {\r\n        return (\r\n            <li key={ingredient} className='ingr-item'><span className='ingr-text'>{ingredient[0]} - {ingredient[1]}</span></li>\r\n        )\r\n    });\r\n\r\n\r\n    const instructionSteps = () => {\r\n\r\n        if (drinkData.strInstructions !== undefined) {\r\n            let steps = drinkData.strInstructions.replace(/([.?!])\\s*(?=[A-Z])/g, \"$1|\").split(\"|\");\r\n\r\n            const stepsDisplay = steps.map((item) => {\r\n                return (\r\n                    <li key={item} className='step-item'><span className='step-text'>{item}</span></li>\r\n                )\r\n            })\r\n\r\n            return stepsDisplay;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Logo />\r\n            {Object.entries(drinkData).length !== 0 ?\r\n                <div className='DrinkDetails'>\r\n                    <div className='tags-list'>\r\n                        <span className='tag' title='Category'>{drinkData.strCategory}</span>\r\n                        <span className='tag' title='Type'>{drinkData.strAlcoholic}</span>\r\n                        <span className='tag' title='Glass'>{drinkData.strGlass}</span>\r\n                        <span className='tag' title='Difficulty'>{setStarsFull(drinkData.makeDifficulty === undefined ? [] : drinkData.makeDifficulty[0])}</span>\r\n                    </div>\r\n\r\n                    <div className='title'>{drinkData.strDrink}</div>\r\n\r\n                    <div className='content'>\r\n                        <div className='main-image'><img alt='drink' src={drinkData.strDrinkThumb} /></div>\r\n                        <div className='main-text'>\r\n                            <div className='ingredients-title'>Ingredients:</div>\r\n                            <ul className='ingr-list'>\r\n                                {displayIngredients}\r\n                            </ul>\r\n                            <div className='ingredients-title extra-space'>Steps to Make It:</div>\r\n                            <ul className='step-list'>\r\n                                {instructionSteps()}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default DrinkDetails;","import axios from 'axios';\r\n\r\nexport const getDrinksbyName = async (url, searchTerm) => {\r\n    const { data } = await axios.get(url, {\r\n        params: {\r\n            s: searchTerm\r\n        }\r\n    });\r\n    return data;\r\n};\r\n\r\nexport const getDrinksbyIngredient = async (url, searchTerm) => {\r\n    const { data } = await axios.get(url, {\r\n        params: {\r\n            i: searchTerm\r\n        }\r\n    });\r\n    return data;\r\n};\r\n\r\nexport const getRandomDrink = async () => {\r\n    const { data } = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php');\r\n    return data;\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/Tooltip.css';\r\n\r\nconst Tooltip = () => {\r\n    return (\r\n        <span>\r\n            <i className=\"fas fa-info-circle info-tooltip\"></i>\r\n\r\n            <div className='tooltip-text up-arrow'>\r\n                You can select up to three different ingredients for your search.\r\n            </div>\r\n        </span>\r\n    )\r\n};\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../css/NavigationBar.css';\r\nimport Tooltip from '../components/Tooltip';\r\n\r\nconst NavigationBar = () => {\r\n    const history = useHistory();\r\n    const termPresent = history.location.pathname.includes(\"/ingredients\");\r\n\r\n    const setIngredientsNav = () => {\r\n        if (termPresent) {\r\n            return 'disabled-link nav-active';\r\n        }\r\n        else {\r\n            return 'nav-inactive';\r\n        };\r\n    };\r\n\r\n    const setKeywordNav = () => {\r\n        if (termPresent === false) {\r\n            return 'disabled-link nav-active';\r\n        }\r\n        else {\r\n            return 'nav-inactive';\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className='NavigationBar'>\r\n            <Link to={'/'} className={`navbutton ${setKeywordNav()}`}>\r\n                By name\r\n            </Link>\r\n\r\n            <Link to={'/ingredients'} className={`navbutton ${setIngredientsNav()}`}>\r\n                By ingredients\r\n            </Link>\r\n\r\n            {termPresent ?\r\n                <Tooltip />\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavigationBar;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { cleanFilterName, removeQueryTerm, setStars } from '../functions/Utils';\r\nimport '../css/CheckBox.css';\r\n\r\nconst Checkbox = ({ filterData, filterCategory, unlockCheckbox, prefilteredData }) => {\r\n    const [boxClicked, setBoxClicked] = useState(true);\r\n\r\n    const urlStats = useLocation();\r\n    const history = useHistory();\r\n    const mainPath = urlStats.pathname;\r\n    const currentQuery = urlStats.search;\r\n    const queryList = queryString.parse(urlStats.search);\r\n\r\n    useEffect(() => {\r\n        const mergeArr = Object.values(queryList).flat(1);\r\n        const boxChecked = mergeArr.includes(cleanFilterName(filterData[0]));\r\n        setBoxClicked(!boxChecked);\r\n    }, [queryList]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const setCheckboxQuery = () => {\r\n        setBoxClicked(!boxClicked);\r\n\r\n        const pageQueryPart = currentQuery.substring(0, 7);\r\n        const cleanedQuery = currentQuery.replace(pageQueryPart, '');\r\n\r\n        const intitialQuery = `${mainPath}?page=1&${filterCategory}=${cleanFilterName(filterData[0])}`;\r\n        const fullPathQuery = `?page=1${cleanedQuery}&${filterCategory}=${cleanFilterName(filterData[0])}`\r\n\r\n        if (boxClicked === true) {\r\n            if (currentQuery === \"\") {\r\n                history.push(intitialQuery);\r\n            }\r\n            else {\r\n                history.push(fullPathQuery);\r\n            }\r\n        }\r\n        else {\r\n            const fixedQuery = currentQuery.replaceAll(\"%20\", \" \");\r\n            var queryValue = fixedQuery.replace(`${filterCategory}=${cleanFilterName(filterData[0])}`, '');\r\n            removeQueryTerm(history, queryValue, mainPath);\r\n        }\r\n    };\r\n\r\n    const drinkQuantity = () => {\r\n        let filterQuantity = '';\r\n        prefilteredData.forEach(drink => {\r\n            if (filterData[0] === drink[0]) {\r\n                filterQuantity = drink[1]\r\n            }\r\n        });\r\n\r\n        if (filterQuantity === '') {\r\n            return ''\r\n        }\r\n        else {\r\n            return `(${filterQuantity})`;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const setFilterName = (term) => {\r\n        if (term === '1-easy') {\r\n            return setStars(1)\r\n        }\r\n        else if (term === '2-medium') {\r\n            return setStars(2)\r\n        }\r\n        else if (term === '3-hard') {\r\n            return setStars(3)\r\n        }\r\n        else {\r\n            return filterData[0]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='CheckBox'>\r\n            <input type=\"checkbox\"\r\n                checked={!boxClicked}\r\n                value={filterData[0]}\r\n                onChange={setCheckboxQuery}\r\n                disabled={unlockCheckbox}\r\n                id={filterData[0]}\r\n            />\r\n            <label htmlFor={filterData[0]}>\r\n                {setFilterName(filterData[0])}\r\n                {` ${drinkQuantity()}`}\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkbox;","import React, { useState } from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport '../css/FilterBlock.css';\r\n\r\nconst FilterBlock = ({ type, drinksData, unfilteredDrinksData }) => {\r\n    const [filterStatus, setFilterStatus] = useState(true);\r\n\r\n    const countDistintByType = (arr, searchType) => {\r\n        let alcoholList = [];\r\n        const counts = {};\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            alcoholList.push(arr[i][searchType])\r\n        }\r\n\r\n        for (var x = 0; x < alcoholList.length; x++) {\r\n            counts[alcoholList[x]] = 1 + (counts[alcoholList[x]] || 0);\r\n        };\r\n\r\n        const sortedArray = Object.entries(counts).sort(function (a, b) {\r\n            return b[1] - a[1];\r\n        });\r\n\r\n        if (type === 'makeDifficulty') {\r\n            const countCopy = { ...counts };\r\n\r\n            const sortedStars = Object.entries(countCopy).sort(function (a, b) {\r\n                return b[0][0] - a[0][0];\r\n            });\r\n\r\n            return sortedStars;\r\n        }\r\n        else {\r\n            return sortedArray;\r\n        }\r\n    };\r\n\r\n    const prefilteredData = countDistintByType(drinksData, type);\r\n    const unFilteredDataList = countDistintByType(unfilteredDrinksData, type);\r\n\r\n    const filters = unFilteredDataList.map((filterData, index) => {\r\n        const unlockCheckbox = !prefilteredData.flat().includes(filterData[0]);\r\n        return (\r\n            <Checkbox\r\n                key={index}\r\n                filterData={filterData}\r\n                filterCategory={type}\r\n                unlockCheckbox={unlockCheckbox}\r\n                prefilteredData={prefilteredData}\r\n            />\r\n        )\r\n    });\r\n\r\n    let buttonName = null;\r\n    const setFilter = () => {\r\n        if (filterStatus === false) {\r\n            buttonName = 'show less -';\r\n            return filters;\r\n        }\r\n        else {\r\n            buttonName = 'view all +';\r\n            return filters.slice(0, 3);\r\n        };\r\n    };\r\n\r\n    const setButton = () => {\r\n        if (filters.length > 3) {\r\n            return <span onClick={() => setFilterStatus(!filterStatus)}>{buttonName}</span>\r\n        }\r\n        else {\r\n            return null;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className='FilterBlock'>\r\n            <div className='block'>\r\n                {setFilter()}\r\n            </div>\r\n\r\n            <div className='button'>\r\n                {setButton()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterBlock;","import React from 'react';\r\nimport FilterBlock from './FilterBlock';\r\nimport '../css/SideBar.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst filterTypes = ['makeDifficulty', 'strAlcoholic', 'strCategory', 'strGlass'];\r\n\r\nconst setFilterHeader = (header) => {\r\n    if (header === 'makeDifficulty') {\r\n        return 'Difficulty'\r\n    }\r\n    else if (header === 'strAlcoholic') {\r\n        return 'Drink Type'\r\n    }\r\n    else if (header === 'strCategory') {\r\n        return 'Category'\r\n    }\r\n    else if (header === 'strGlass') {\r\n        return 'Glass Type'\r\n    }\r\n};\r\n\r\nconst SideBar = ({ drinksData, unfilteredDrinksData }) => {\r\n    const history = useHistory();\r\n\r\n    const clearAllQueries = () => {\r\n        history.push(`${history.location.pathname}?page=1`)\r\n    };\r\n\r\n\r\n    const displayClearButton = () => {\r\n        const currentQuery = history.location.search;\r\n        const pageQueryPart = currentQuery.substring(0, 7);\r\n        let cleanedQuery = currentQuery.replace(pageQueryPart, '');\r\n\r\n        if (cleanedQuery !== '') {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    let filters = filterTypes.map((type, index) => {\r\n        return (\r\n            <div key={index}>\r\n                <div className='header'>\r\n                    {setFilterHeader(type)}\r\n                </div>\r\n\r\n                <FilterBlock type={type} drinksData={drinksData} unfilteredDrinksData={unfilteredDrinksData} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='SideBar'>\r\n            <div className='frontText'>\r\n                Refine your search:\r\n\r\n                {displayClearButton() ?\r\n                    <span onClick={clearAllQueries} className='clearAllButton'>\r\n                        clear all\r\n                    </span>\r\n                    : null}\r\n\r\n            </div>\r\n            <div className='sections'>\r\n                {filters}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setStarsFull } from '../functions/Utils';\r\nimport '../css/DrinkThumbnail.css';\r\n\r\nconst DrinkThumbnail = ({ drink, imageLoaded }) => {\r\n\r\n    const ingredientCount = (term) => {\r\n        let ingrQuantity = term.replace('items-', '')\r\n        return ingrQuantity;\r\n    }\r\n\r\n    return (\r\n        <Link to={\r\n            {\r\n                pathname: `/details/${drink.idDrink}`,\r\n                state: { drink }\r\n            }\r\n        }>\r\n            <div className='DrinkThumbnail'>\r\n                <div className='image-wrapper'>\r\n                    <img onLoad={imageLoaded} src={`${drink.strDrinkThumb}/preview`} alt=\"Drink\" />\r\n                </div>\r\n\r\n                <div className='info-wrapper'>\r\n                    <div className='title'>\r\n                        {drink.strDrink}\r\n                    </div>\r\n\r\n                    <div className='info'>\r\n                        <div className='ingredients-tab'>\r\n                            <i className=\"fas fa-cocktail\"></i>\r\n                            {` ${ingredientCount(drink.ingredientCount)}`}\r\n                            <div className='ing-text'>ingredients</div>\r\n                        </div>\r\n\r\n                        <div className='stars-tab'>\r\n                            <div className='stars'>{setStarsFull(drink.makeDifficulty[0])}</div>\r\n                            <div className='stars-text'>difficulty</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default DrinkThumbnail;","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport '../css/Pagination.css';\r\n\r\nconst Pagination = ({ resetSpinnerPag, drinksPerPage, totalDrinks, paginate }) => {\r\n    const pageNumbers = [];\r\n    const urlStats = useLocation();\r\n    const queryList = queryString.parse(urlStats.search);\r\n    const mainPath = urlStats.pathname;\r\n    const currentQuery = urlStats.search;\r\n    const history = useHistory();\r\n\r\n    const pageQuery = '?page=';\r\n    const pageQueryFull = currentQuery.substring(0, 7);\r\n    let cleanedQuery = currentQuery.replace(pageQueryFull, '');\r\n    let currentPageNumber = currentQuery[6];\r\n    let pageNr = parseInt(currentPageNumber, 10);\r\n    const totalPageNr = Math.ceil(totalDrinks.length / drinksPerPage);\r\n\r\n    for (let i = 1; i <= totalPageNr; i++) {\r\n        pageNumbers.push(i);\r\n    };\r\n\r\n    const onClickHandler = (e, number) => {\r\n        e.preventDefault()\r\n        paginate(number);\r\n        let cleanedQuery = currentQuery.replace(`?page=${queryList.page}`, '');\r\n        history.push(`${mainPath}?page=${number}${cleanedQuery}`);\r\n        resetSpinnerPag();\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    const setActivePage = (number) => {\r\n        if (queryList.page === undefined && number === 1) {\r\n            return 'active-page';\r\n        }\r\n        else if (parseInt(queryList.page, 10) === number) {\r\n            return 'active-page'\r\n        }\r\n    };\r\n\r\n    const disablePage = (number) => {\r\n        if (queryList.page === undefined && number === 1) {\r\n            return 'disabled';\r\n        }\r\n        else if (parseInt(queryList.page, 10) === number) {\r\n            return 'disabled'\r\n        }\r\n    };\r\n\r\n    const setPrevButton = () => {\r\n        if (queryList.page === undefined || parseInt(queryList.page, 10) === 1) {\r\n            return 'pagination-btn-hidden'\r\n        }\r\n    };\r\n\r\n    const setNextButton = () => {\r\n        const lastPage = totalPageNr;\r\n        if (parseInt(queryList.page, 10) === lastPage) {\r\n            return 'pagination-btn-hidden'\r\n        }\r\n    };\r\n\r\n    const nextButtonClickHandler = () => {\r\n        if (currentPageNumber === undefined) {\r\n            history.push(`${pageQuery}2${cleanedQuery}`)\r\n        }\r\n        else {\r\n            history.push(`${pageQuery}${pageNr + 1}${cleanedQuery}`)\r\n        };\r\n        resetSpinnerPag();\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    const prevButtonClickHandler = () => {\r\n        history.push(`${pageQuery}${pageNr - 1}${cleanedQuery}`)\r\n        resetSpinnerPag();\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {totalPageNr > 1 ?\r\n                <div className='Pagination-wrap'>\r\n                    <nav>\r\n                        <ul className='pagination justify-content-center'>\r\n                            <li onClick={prevButtonClickHandler} className=\"page-item\"><a className={`page-link page-nav-buttons ${setPrevButton()}`} href={void (0)}>Prev</a></li>\r\n                            {pageNumbers.map((number) => {\r\n                                return (\r\n                                    <li key={number} className={`page-item page-nr ${disablePage(number)}`}>\r\n                                        <a onClick={(e) => onClickHandler(e, number)} href={void (0)} className={`page-link ${setActivePage(number)}`}>\r\n                                            <span>{number}</span>\r\n                                        </a>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                            <li onClick={nextButtonClickHandler} className=\"page-item\"><a className={`page-link page-nav-buttons ${setNextButton()}`} href={void (0)}>Next</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                : <div className='pag-placeholder'></div>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport DrinkThumbnail from './DrinkThumbnail';\r\nimport '../css/DrinksList.css';\r\nimport Pagination from '../components/Pagination';\r\n\r\n\r\nconst DrinksList = ({ resetSpinnerPag, drinksData, imageLoaded, paginate, drinksPerPage, totalDrinksData }) => {\r\n\r\n    const drinks = drinksData.map((drink) => {\r\n        return (\r\n            <DrinkThumbnail\r\n                key={drink.idDrink}\r\n                drink={drink}\r\n                imageLoaded={imageLoaded}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='DrinksList'>\r\n            {drinks}\r\n            <Pagination resetSpinnerPag={resetSpinnerPag} paginate={paginate} drinksPerPage={drinksPerPage} totalDrinks={totalDrinksData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrinksList;","import React from 'react';\r\nimport '../css/Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner-border main-spinner' role='status'>\r\n            <span className='sr-only'>Loading...</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport '../css/SearchTermBlock.css';\r\nimport '../css/Tag.css';\r\n\r\nconst SearchTermBlock = ({ searchTerm }) => {\r\n    const termQuantity = (Object.values(searchTerm).length);\r\n\r\n    const setSearchTerm = (term, index, termQuantity) => {\r\n        if (termQuantity === 1) {\r\n            return (\r\n                <span key={index}>\r\n                    <span className='termBold'>{term}</span>\r\n                </span>\r\n            )\r\n        }\r\n        else if (termQuantity === 2) {\r\n            if (index === 0) {\r\n                return (\r\n                    <span key={index}>\r\n                        <span className='termBold'>{term}</span>\r\n                    </span>\r\n                )\r\n            }\r\n            else if (index === 1) {\r\n                return (\r\n                    <span key={index}>\r\n                        <span> and </span> <span className='termBold'>{term}</span>\r\n                    </span>\r\n                )\r\n            }\r\n        }\r\n        else if (termQuantity === 3) {\r\n            if (index === 0) {\r\n                return (\r\n                    <span key={index}>\r\n                        <span className='termBold'>{term}</span>\r\n                    </span>\r\n                )\r\n            }\r\n            else if (index === 1) {\r\n                return (\r\n                    <span key={index}>\r\n                        <span>, </span> <span className='termBold'>{term}</span>\r\n                    </span>\r\n                )\r\n            }\r\n            else if (index === 2) {\r\n                return (\r\n                    <span key={index}>\r\n                        <span> and </span><span className='termBold'>{term}</span>\r\n                    </span>\r\n                )\r\n            }\r\n        };\r\n    };\r\n\r\n    const searchTerms = Object.values(searchTerm).map((term, index) => {\r\n        return (\r\n            <span key={term}>\r\n                {setSearchTerm(term, index, termQuantity)}\r\n            </span>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='SearchTermBlock'>\r\n            {searchTerms}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchTermBlock;","import React from 'react';\r\nimport SearchTermBlock from '../components/SearchTermBlock';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../css/InformationTab.css';\r\n\r\nconst InformationTab = ({drinksData, drinksQuantity }) => {\r\n    const searchTerm = useParams();\r\n\r\n    const setDrinksWord = () => {\r\n        if (drinksQuantity === 1) {\r\n            return 'drink'\r\n        }\r\n        else {\r\n            return 'drinks'\r\n        }\r\n    };\r\n\r\n    const setTabPosition = () => {\r\n        if (drinksData.length === 0) {\r\n            return 'InformationTab-zero';\r\n        }\r\n        else {\r\n            return 'InformationTab';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={setTabPosition()}>\r\n            {\r\n                drinksData.length !== 0 ?\r\n                    <>\r\n                        {drinksQuantity} {setDrinksWord()} found that match <SearchTermBlock searchTerm={searchTerm} />\r\n                    </>\r\n                    :\r\n                    <>\r\n                        0 {setDrinksWord()} found that match <SearchTermBlock searchTerm={searchTerm} />\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InformationTab;","import React from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { removeQueryTerm, setStars } from '../functions/Utils';\r\nimport '../css/QueryTermBlock.css';\r\nimport '../css/Tag.css';\r\n\r\nconst QueryTermBlock = () => {\r\n    const history = useHistory();\r\n    const urlStats = useLocation();\r\n    const mainPath = urlStats.pathname;\r\n    const currentQuery = urlStats.search;\r\n    const queryList = queryString.parse(urlStats.search);\r\n    const queryArray = Object.entries(queryList);\r\n\r\n    const cleanedQueryArray = (arr) => {\r\n\r\n        let queryArr = arr;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (queryArr[i][0] === 'page') {\r\n                queryArr.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return queryArr;\r\n\r\n    }\r\n\r\n    const onClickHandler = (term) => {\r\n        const termToReplace = `${term[0]}=${term[1]}`;\r\n        const fixedQuery = currentQuery.replaceAll(\"%20\", \" \");\r\n        var queryValue = fixedQuery.replace(termToReplace, \"\");\r\n        removeQueryTerm(history, queryValue, mainPath);\r\n    };\r\n\r\n    const setFixedValues = (value) => {\r\n        let mainValue = value;\r\n        const doubleSpace = mainValue.includes(\"  \");\r\n        if (doubleSpace === true) {\r\n            return mainValue.replaceAll(\"  \", ' / ');\r\n        }\r\n        else if (mainValue.includes('OtherUnknown')) {\r\n            return 'Other/Unknown'\r\n        }\r\n        else if (mainValue.includes('MargaritaCoupette glass')) {\r\n            return 'Margarita/Coupette glass'\r\n        }\r\n        else {\r\n            return value;\r\n        };\r\n    };\r\n\r\n    const queryTerms = cleanedQueryArray(queryArray).map((term, index) => {\r\n        return (\r\n            <span className='Tag' key={index} onClick={() => onClickHandler(term)}>\r\n                {term[0] === 'makeDifficulty' ? setStars(term[1][0]) : `${setFixedValues(term[1])}`}\r\n            </span>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='QueryTermBlock'>\r\n            <span className='title'>{cleanedQueryArray(queryArray).length !== 0 ? 'Sorted By:' : ''}</span>\r\n            <span>{queryTerms}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QueryTermBlock;","import React from 'react';\r\nimport SideBar from './SideBar';\r\nimport DrinksList from './DrinksList';\r\nimport Spinner from './Spinner';\r\nimport InformationTab from '../components/InformationTab';\r\nimport '../css/DrinksDisplay.css';\r\nimport QueryTermBlock from '../components/QueryTermBlock';\r\n\r\n\r\nconst DrinksDisplay = ({ resetSpinnerPag, paginate, drinksPerPage, totalDrinksData, imageLoaded, loading, drinksData, unfilteredDrinksData }) => {\r\n    return (\r\n        <div className='DrinksDisplay'>\r\n            <div style={{ display: loading ? \"block\" : \"none\" }}>\r\n                <Spinner />\r\n            </div>\r\n\r\n            <div style={{ display: loading ? \"none\" : \"block\" }}>\r\n\r\n                {\r\n                    drinksData.length !== 0 ?\r\n                        <QueryTermBlock />\r\n                        : null\r\n                }\r\n\r\n                <InformationTab drinksData={drinksData} drinksQuantity={totalDrinksData.length} />\r\n\r\n                <div style={{ display: 'flex' }}>\r\n                    {drinksData.length !== 0 ?\r\n                        <SideBar drinksData={totalDrinksData} unfilteredDrinksData={unfilteredDrinksData} />\r\n                        : null\r\n                    }\r\n                    <DrinksList resetSpinnerPag={resetSpinnerPag} paginate={paginate} drinksPerPage={drinksPerPage} totalDrinksData={totalDrinksData} drinksData={drinksData} imageLoaded={imageLoaded} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default DrinksDisplay;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../css/SearchBar.css';\r\n\r\nconst SearchBar = ({ resetDrinkList, resetSpinner }) => {\r\n\r\n    const [input, setInput] = useState('');\r\n    const history = useHistory();\r\n    const currentPath = history.location.pathname;\r\n    const [placeholderTxt, setPlaceholderTxt] = useState('');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        resetDrinkList();\r\n        resetSpinner();\r\n    };\r\n\r\n    const setPath = () => {\r\n        if (input === '') {\r\n            return `/`;\r\n        }\r\n        else if (input.includes('%')) {\r\n            return `/`;\r\n        }\r\n        else {\r\n            return `/${input}`;\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (input === '') {\r\n            setPlaceholderTxt('Enter a name of a drink...')\r\n        }\r\n\r\n        if (input.includes('/') || input.includes('?') || input.includes('#') || input.includes('%') || input.includes('details')) {\r\n            setInput('')\r\n        }\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        if (currentPath !== '/') {\r\n            const urlTerm = currentPath.split('/')[1];\r\n            setInput(urlTerm);\r\n        }\r\n    }, []); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const clearInput = () => {\r\n        setInput('');\r\n    }\r\n\r\n    const clearTextIcon = () => {\r\n        if (input === \"\" || input === undefined) {\r\n            return null;\r\n        }\r\n        else {\r\n            return <i onClick={clearInput} className=\"fas fa-times clear-icon\"></i>\r\n        };\r\n    };\r\n\r\n    const handleKeyPress = (target) => {\r\n        if (target.charCode === 13) {\r\n            resetDrinkList();\r\n            resetSpinner();\r\n            history.push(setPath());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='SearchBar'>\r\n            <input onKeyPress={(e) => handleKeyPress(e)} value={input} onChange={onChangeHandler} type='text' placeholder={placeholderTxt} />\r\n            <Link to={setPath} onClick={onClickHandler} className='button'>\r\n                <span className='default-btn-txt'>SEARCH</span>\r\n                <span className='mobile-btn-txt'><i className=\"fas fa-search\"></i></span>            </Link>\r\n            {clearTextIcon()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","export const ingredientsList = () => {\r\n    return [{ \"title\": \"151 proof rum\" }, { \"title\": \"7-up\" }, { \"title\": \"Absinthe\" }, { \"title\": \"Absolut citron\" }, { \"title\": \"Absolut Kurant\" }, { \"title\": \"Absolut Peppar\" }, { \"title\": \"Absolut Vodka\" }, { \"title\": \"Advocaat\" }, { \"title\": \"Aejo rum\" }, { \"title\": \"Aftershock\" }, { \"title\": \"Agave syrup\" }, { \"title\": \"Ale\" }, { \"title\": \"Allspice\" }, { \"title\": \"Almond Extract\" }, { \"title\": \"Almond flavoring\" }, { \"title\": \"Almond\" }, { \"title\": \"Amaretto\" }, { \"title\": \"Angelica Root\" }, { \"title\": \"Angostura Bitters\" }, { \"title\": \"Anis\" }, { \"title\": \"Anise\" }, { \"title\": \"Anisette\" }, { \"title\": \"Aperol\" }, { \"title\": \"Apfelkorn\" }, { \"title\": \"Apple Brandy\" }, { \"title\": \"Apple Cider\" }, { \"title\": \"Apple Juice\" }, { \"title\": \"Apple schnapps\" }, { \"title\": \"Apple\" }, { \"title\": \"Applejack\" }, { \"title\": \"Apricot Brandy\" }, { \"title\": \"Apricot nectar\" }, { \"title\": \"Apricot\" }, { \"title\": \"Aquavit\" }, { \"title\": \"Asafoetida\" }, { \"title\": \"Anejo rum\" }, { \"title\": \"Baby Plum Tomatoes\" }, { \"title\": \"Bacardi Limon\" }, { \"title\": \"Bacardi\" }, { \"title\": \"Bacon\" }, { \"title\": \"Bailey's irish cream\" }, { \"title\": \"Baileys irish cream\" }, { \"title\": \"Banana liqueur\" }, { \"title\": \"Banana rum\" }, { \"title\": \"Banana syrup\" }, { \"title\": \"Banana\" }, { \"title\": \"Barenjager\" }, { \"title\": \"Basil\" }, { \"title\": \"Beef bouillon\" }, { \"title\": \"Beef Stock\" }, { \"title\": \"Beer\" }, { \"title\": \"Benedictine\" }, { \"title\": \"Berries\" }, { \"title\": \"Bitter lemon\" }, { \"title\": \"Bitters\" }, { \"title\": \"Black Pepper\" }, { \"title\": \"Black rum\" }, { \"title\": \"Black Sambuca\" }, { \"title\": \"Blackberries\" }, { \"title\": \"Blackberry Brandy\" }, { \"title\": \"Blackberry schnapps\" }, { \"title\": \"Blackcurrant cordial\" }, { \"title\": \"Blackcurrant schnapps\" }, { \"title\": \"Blackcurrant squash\" }, { \"title\": \"Blended Whiskey\" }, { \"title\": \"Blue Curacao\" }, { \"title\": \"Blue Maui\" }, { \"title\": \"Blueberries\" }, { \"title\": \"Blueberry schnapps\" }, { \"title\": \"Bourbon\" }, { \"title\": \"Bow Tie Pasta\" }, { \"title\": \"Bramley Apples\" }, { \"title\": \"Brandy\" }, { \"title\": \"Bread\" }, { \"title\": \"Brown Rice\" }, { \"title\": \"Brown Sugar\" }, { \"title\": \"Butter\" }, { \"title\": \"Butterscotch schnapps\" }, { \"title\": \"Cachaca\" }, { \"title\": \"Calvados\" }, { \"title\": \"Campari\" }, { \"title\": \"Canadian whisky\" }, { \"title\": \"Candy\" }, { \"title\": \"Cantaloupe\" }, { \"title\": \"Caramel coloring\" }, { \"title\": \"Carbonated soft drink\" }, { \"title\": \"Carbonated water\" }, { \"title\": \"Cardamom\" }, { \"title\": \"Carrot\" }, { \"title\": \"Caster Sugar\" }, { \"title\": \"Cayenne pepper\" }, { \"title\": \"Celery salt\" }, { \"title\": \"Celery\" }, { \"title\": \"Chambord raspberry liqueur\" }, { \"title\": \"Champagne\" }, { \"title\": \"Cheese\" }, { \"title\": \"Cherries\" }, { \"title\": \"Cherry Brandy\" }, { \"title\": \"Cherry cola\" }, { \"title\": \"Cherry Grenadine\" }, { \"title\": \"Cherry Heering\" }, { \"title\": \"Cherry juice\" }, { \"title\": \"Cherry liqueur\" }, { \"title\": \"Cherry\" }, { \"title\": \"Chicken Breasts\" }, { \"title\": \"Chicken Stock\" }, { \"title\": \"Chicken\" }, { \"title\": \"Chilled Butter\" }, { \"title\": \"Chinese Broccoli\" }, { \"title\": \"Chocolate ice-cream\" }, { \"title\": \"Chocolate liqueur\" }, { \"title\": \"Chocolate milk\" }, { \"title\": \"Chocolate syrup\" }, { \"title\": \"Chocolate\" }, { \"title\": \"Chopped Garlic\" }, { \"title\": \"Chopped Onion\" }, { \"title\": \"Chopped Tomatoes\" }, { \"title\": \"Cider\" }, { \"title\": \"Cinnamon schnapps\" }, { \"title\": \"Cinnamon\" }, { \"title\": \"Citrus vodka\" }, { \"title\": \"Clamato juice\" }, { \"title\": \"Clove\" }, { \"title\": \"Cloves\" }, { \"title\": \"Club Soda\" }, { \"title\": \"Coca-Cola\" }, { \"title\": \"Cocktail Olive\" }, { \"title\": \"Cocktail onion\" }, { \"title\": \"Cocoa Powder\" }, { \"title\": \"Coconut cream\" }, { \"title\": \"Coconut liqueur\" }, { \"title\": \"Coconut Milk\" }, { \"title\": \"Coconut rum\" }, { \"title\": \"Coconut syrup\" }, { \"title\": \"Coffee brandy\" }, { \"title\": \"Coffee liqueur\" }, { \"title\": \"Coffee\" }, { \"title\": \"Coffeemate\" }, { \"title\": \"Cognac\" }, { \"title\": \"Cointreau\" }, { \"title\": \"Cola\" }, { \"title\": \"Cold Water\" }, { \"title\": \"Condensed milk\" }, { \"title\": \"Coriander Leaves\" }, { \"title\": \"Coriander\" }, { \"title\": \"Corn Starch\" }, { \"title\": \"Corn syrup\" }, { \"title\": \"Corn Tortillas\" }, { \"title\": \"Cornstarch\" }, { \"title\": \"Corona\" }, { \"title\": \"Courgette\" }, { \"title\": \"Cranberries\" }, { \"title\": \"Cranberry Juice\" }, { \"title\": \"Cranberry liqueur\" }, { \"title\": \"Cranberry vodka\" }, { \"title\": \"Cream of Coconut\" }, { \"title\": \"Cream Sherry\" }, { \"title\": \"Cream soda\" }, { \"title\": \"Cream\" }, { \"title\": \"Creme de Almond\" }, { \"title\": \"Creme De Banane\" }, { \"title\": \"Creme de Cacao\" }, { \"title\": \"Creme de Cassis\" }, { \"title\": \"Creme de Noyaux\" }, { \"title\": \"Creme Fraiche\" }, { \"title\": \"Crown Royal\" }, { \"title\": \"Crystal light\" }, { \"title\": \"Cubed Feta Cheese\" }, { \"title\": \"Cucumber\" }, { \"title\": \"Cumin powder\" }, { \"title\": \"Cumin seed\" }, { \"title\": \"Curacao\" }, { \"title\": \"Cynar\" }, { \"title\": \"Daiquiri mix\" }, { \"title\": \"Dark Chocolate\" }, { \"title\": \"Dark Creme de Cacao\" }, { \"title\": \"Dark Rum\" }, { \"title\": \"Dark Soy Sauce\" }, { \"title\": \"demerara sugar\" }, { \"title\": \"Digestive Biscuits\" }, { \"title\": \"Dijon Mustard\" }, { \"title\": \"Doner Meat\" }, { \"title\": \"Dr Pepper\" }, { \"title\": \"Dr. Pepper\" }, { \"title\": \"Drambuie\" }, { \"title\": \"Dried Oregano\" }, { \"title\": \"Dry Vermouth\" }, { \"title\": \"Dubonnet blanc\" }, { \"title\": \"Dubonnet Rouge\" }, { \"title\": \"Egg White\" }, { \"title\": \"Egg Yolk\" }, { \"title\": \"Egg\" }, { \"title\": \"Eggnog\" }, { \"title\": \"Eggs\" }, { \"title\": \"Enchilada Sauce\" }, { \"title\": \"English Mustard-Small .png\" }, { \"title\": \"Erin Cream\" }, { \"title\": \"Espresso\" }, { \"title\": \"Everclear\" }, { \"title\": \"Extra Virgin Olive Oil\" }, { \"title\": \"Fanta\" }, { \"title\": \"Farfalle\" }, { \"title\": \"Fennel Seeds\" }, { \"title\": \"Feta Cheese\" }, { \"title\": \"Firewater\" }, { \"title\": \"Flaked Almonds\" }, { \"title\": \"Flour\" }, { \"title\": \"Food coloring\" }, { \"title\": \"Forbidden Fruit\" }, { \"title\": \"Frangelico\" }, { \"title\": \"Free-range Egg\" }, { \"title\": \"Free-range Eggs\" }, { \"title\": \"Fresca\" }, { \"title\": \"Fresh Basil\" }, { \"title\": \"Fresh Lemon Juice\" }, { \"title\": \"Freshly Chopped Parsley\" }, { \"title\": \"Fries\" }, { \"title\": \"Fruit juice\" }, { \"title\": \"Fruit punch\" }, { \"title\": \"Fruit\" }, { \"title\": \"Galliano\" }, { \"title\": \"Garlic Sauce\" }, { \"title\": \"Garlic\" }, { \"title\": \"Gatorade\" }, { \"title\": \"Gin\" }, { \"title\": \"Ginger Ale\" }, { \"title\": \"Ginger beer\" }, { \"title\": \"Ginger\" }, { \"title\": \"Glycerine\" }, { \"title\": \"Godiva liqueur\" }, { \"title\": \"Gold rum\" }, { \"title\": \"Gold Tequila\" }, { \"title\": \"Goldschlager\" }, { \"title\": \"Gouda Cheese\" }, { \"title\": \"Grain Alcohol\" }, { \"title\": \"Grand Marnier\" }, { \"title\": \"Granulated Sugar\" }, { \"title\": \"Grape juice\" }, { \"title\": \"Grape soda\" }, { \"title\": \"Grapefruit Juice\" }, { \"title\": \"Grapes\" }, { \"title\": \"Grated Cheese\" }, { \"title\": \"Green Chartreuse\" }, { \"title\": \"Green Creme de Menthe\" }, { \"title\": \"Green Ginger Wine\" }, { \"title\": \"Green Olives\" }, { \"title\": \"Green Red Lentils\" }, { \"title\": \"Grenadine\" }, { \"title\": \"Ground Almonds\" }, { \"title\": \"Ground Ginger\" }, { \"title\": \"Guava juice\" }, { \"title\": \"Guinness stout\" }, { \"title\": \"Guinness\" }, { \"title\": \"Half-and-half\" }, { \"title\": \"Hawaiian punch\" }, { \"title\": \"Hazelnut liqueur\" }, { \"title\": \"Heavy cream\" }, { \"title\": \"Honey\" }, { \"title\": \"Hooch\" }, { \"title\": \"Hoopers Hooch\" }, { \"title\": \"Hot Beef Stock\" }, { \"title\": \"Hot Chocolate\" }, { \"title\": \"Hot Damn\" }, { \"title\": \"Hot Sauce\" }, { \"title\": \"Hotsauce\" }, { \"title\": \"Hpnotiq\" }, { \"title\": \"Ice-Cream\" }, { \"title\": \"Ice\" }, { \"title\": \"Iced tea\" }, { \"title\": \"Irish cream\" }, { \"title\": \"Irish Whiskey\" }, { \"title\": \"Italian Seasoning\" }, { \"title\": \"Jack Daniels\" }, { \"title\": \"Jello\" }, { \"title\": \"Jelly\" }, { \"title\": \"Jgermeister\" }, { \"title\": \"Jim Beam\" }, { \"title\": \"Johnnie Walker\" }, { \"title\": \"Jagermeister\" }, { \"title\": \"Kahlua\" }, { \"title\": \"Key Largo Schnapps\" }, { \"title\": \"Kirschwasser\" }, { \"title\": \"Kiwi liqueur\" }, { \"title\": \"Kiwi\" }, { \"title\": \"Kool-Aid\" }, { \"title\": \"Kummel\" }, { \"title\": \"Lager\" }, { \"title\": \"Lasagne Sheets\" }, { \"title\": \"Lasagne\" }, { \"title\": \"Lean Minced Beef\" }, { \"title\": \"Lemon Juice\" }, { \"title\": \"Lemon Peel\" }, { \"title\": \"Lemon soda\" }, { \"title\": \"Lemon vodka\" }, { \"title\": \"Lemon-lime soda\" }, { \"title\": \"lemon-lime\" }, { \"title\": \"lemon\" }, { \"title\": \"Lemonade\" }, { \"title\": \"Lentils\" }, { \"title\": \"Lettuce\" }, { \"title\": \"Licorice Root\" }, { \"title\": \"Light Cream\" }, { \"title\": \"Light Rum\" }, { \"title\": \"Lillet\" }, { \"title\": \"Lime juice cordial\" }, { \"title\": \"Lime Juice\" }, { \"title\": \"Lime liqueur\" }, { \"title\": \"Lime peel\" }, { \"title\": \"Lime vodka\" }, { \"title\": \"Lime\" }, { \"title\": \"Limeade\" }, { \"title\": \"Madeira\" }, { \"title\": \"Malibu Rum\" }, { \"title\": \"Malt Vinegar\" }, { \"title\": \"Mandarin\" }, { \"title\": \"Mandarine napoleon\" }, { \"title\": \"Mango\" }, { \"title\": \"Maple syrup\" }, { \"title\": \"Maraschino cherry juice\" }, { \"title\": \"Maraschino Cherry\" }, { \"title\": \"Maraschino Liqueur\" }, { \"title\": \"Margarita mix\" }, { \"title\": \"Marjoram leaves\" }, { \"title\": \"Marshmallows\" }, { \"title\": \"Maui\" }, { \"title\": \"Melon liqueur\" }, { \"title\": \"Melon vodka\" }, { \"title\": \"Mezcal\" }, { \"title\": \"Midori melon liqueur\" }, { \"title\": \"Midori-Small .png\" }, { \"title\": \"Milk\" }, { \"title\": \"Minced Beef\" }, { \"title\": \"Minced Garlic\" }, { \"title\": \"Mint syrup\" }, { \"title\": \"Mint\" }, { \"title\": \"Mountain Dew\" }, { \"title\": \"Mozzarella Balls\" }, { \"title\": \"Mozzarella\" }, { \"title\": \"Mushroom\" }, { \"title\": \"Mushrooms\" }, { \"title\": \"Mustard\" }, { \"title\": \"Nutmeg\" }, { \"title\": \"Nuts\" }, { \"title\": \"Olive Oil\" }, { \"title\": \"Olive\" }, { \"title\": \"Onion\" }, { \"title\": \"Onions\" }, { \"title\": \"Orange Bitters\" }, { \"title\": \"Orange Curacao\" }, { \"title\": \"Orange Juice\" }, { \"title\": \"Orange liqueur\" }, { \"title\": \"Orange Peel\" }, { \"title\": \"Orange rum\" }, { \"title\": \"Orange Soda\" }, { \"title\": \"Orange spiral\" }, { \"title\": \"Orange vodka\" }, { \"title\": \"Orange\" }, { \"title\": \"Oregano\" }, { \"title\": \"Oreo cookie\" }, { \"title\": \"Orgeat Syrup\" }, { \"title\": \"Ouzo\" }, { \"title\": \"Oyster Sauce\" }, { \"title\": \"Papaya juice\" }, { \"title\": \"Papaya\" }, { \"title\": \"Parfait d' amour\" }, { \"title\": \"Parmesan Cheese\" }, { \"title\": \"Parmesan\" }, { \"title\": \"Parmigiano-Reggiano\" }, { \"title\": \"Parsley\" }, { \"title\": \"Passion fruit juice\" }, { \"title\": \"Passion fruit syrup\" }, { \"title\": \"Passoa\" }, { \"title\": \"Peach brandy\" }, { \"title\": \"Peach juice\" }, { \"title\": \"Peach liqueur\" }, { \"title\": \"Peach Nectar\" }, { \"title\": \"Peach Schnapps\" }, { \"title\": \"Peach Vodka\" }, { \"title\": \"Peach\" }, { \"title\": \"Peachtree schnapps\" }, { \"title\": \"Peanut Oil\" }, { \"title\": \"Peas\" }, { \"title\": \"Penne Rigate\" }, { \"title\": \"Pepper\" }, { \"title\": \"Peppermint extract\" }, { \"title\": \"Peppermint Schnapps\" }, { \"title\": \"Pepsi Cola\" }, { \"title\": \"Pernod\" }, { \"title\": \"Peychaud bitters\" }, { \"title\": \"Pina colada mix\" }, { \"title\": \"Pineapple Juice\" }, { \"title\": \"Pineapple rum\" }, { \"title\": \"Pineapple vodka\" }, { \"title\": \"Pineapple-orange-banana juice\" }, { \"title\": \"Pineapple\" }, { \"title\": \"Pink lemonade\" }, { \"title\": \"Pisang Ambon\" }, { \"title\": \"Pisco\" }, { \"title\": \"Pina colada\" }, { \"title\": \"Plain Chocolate\" }, { \"title\": \"Plain Flour\" }, { \"title\": \"Plum Tomatoes\" }, { \"title\": \"Plums\" }, { \"title\": \"Port\" }, { \"title\": \"Potato\" }, { \"title\": \"Potatoes\" }, { \"title\": \"Powdered Sugar\" }, { \"title\": \"Prawns\" }, { \"title\": \"Purple passion\" }, { \"title\": \"Raisins\" }, { \"title\": \"Raspberry cordial\" }, { \"title\": \"Raspberry Jam\" }, { \"title\": \"Raspberry juice\" }, { \"title\": \"Raspberry liqueur\" }, { \"title\": \"Raspberry schnapps\" }, { \"title\": \"Raspberry syrup\" }, { \"title\": \"Raspberry Vodka\" }, { \"title\": \"Raw King Prawns\" }, { \"title\": \"Red Chile Flakes\" }, { \"title\": \"Red Chili Flakes\" }, { \"title\": \"Red Hot Chili Flakes\" }, { \"title\": \"Red Lentils\" }, { \"title\": \"Red Wine\" }, { \"title\": \"Rhubarb\" }, { \"title\": \"Ricard\" }, { \"title\": \"Rice Stick Noodles\" }, { \"title\": \"Rock Salt\" }, { \"title\": \"Root beer schnapps\" }, { \"title\": \"Root beer\" }, { \"title\": \"Roses sweetened lime juice\" }, { \"title\": \"Rosewater\" }, { \"title\": \"Rum\" }, { \"title\": \"Rumple Minze\" }, { \"title\": \"Rye whiskey\" }, { \"title\": \"Sake\" }, { \"title\": \"Salmon\" }, { \"title\": \"Salt\" }, { \"title\": \"Sambuca\" }, { \"title\": \"Sarsaparilla\" }, { \"title\": \"Schnapps\" }, { \"title\": \"Schweppes Lemon\" }, { \"title\": \"Schweppes Russchian\" }, { \"title\": \"Schweppes Russchiani\" }, { \"title\": \"Scotch\" }, { \"title\": \"Sesame Seed\" }, { \"title\": \"Sherbet\" }, { \"title\": \"Sherry\" }, { \"title\": \"Shredded Cheese\" }, { \"title\": \"Shredded Monterey Jack Cheese\" }, { \"title\": \"Sirup of roses\" }, { \"title\": \"Sloe Gin\" }, { \"title\": \"Small.png\" }, { \"title\": \"Soda Water\" }, { \"title\": \"Sour Apple Pucker\" }, { \"title\": \"Sour Mix\" }, { \"title\": \"Southern Comfort\" }, { \"title\": \"Soy Milk\" }, { \"title\": \"Soy Sauce\" }, { \"title\": \"Soya Milk\" }, { \"title\": \"Soya Sauce\" }, { \"title\": \"Spaghetti\" }, { \"title\": \"Spiced Rum\" }, { \"title\": \"Spinach\" }, { \"title\": \"Sprite\" }, { \"title\": \"Squeezed Orange\" }, { \"title\": \"Squirt\" }, { \"title\": \"Stir-fry Vegetables\" }, { \"title\": \"Strawberries\" }, { \"title\": \"Strawberry juice\" }, { \"title\": \"Strawberry liqueur\" }, { \"title\": \"Strawberry Schnapps\" }, { \"title\": \"Strawberry syrup\" }, { \"title\": \"Sugar Syrup\" }, { \"title\": \"Sugar\" }, { \"title\": \"Sunny delight\" }, { \"title\": \"Surge\" }, { \"title\": \"Swedish punsch\" }, { \"title\": \"Sweet and Sour\" }, { \"title\": \"Sweet Cream\" }, { \"title\": \"Sweet Vermouth\" }, { \"title\": \"Tabasco Sauce\" }, { \"title\": \"Tang\" }, { \"title\": \"Tawny port\" }, { \"title\": \"Tea\" }, { \"title\": \"Tennessee whiskey\" }, { \"title\": \"Tequila rose\" }, { \"title\": \"Tequila\" }, { \"title\": \"Tia Maria\" }, { \"title\": \"Tinned Tuna\" }, { \"title\": \"Tomato Juice\" }, { \"title\": \"Tomato Puree\" }, { \"title\": \"Tomato\" }, { \"title\": \"Tomatoe\" }, { \"title\": \"Tomatoes\" }, { \"title\": \"Tonic Water\" }, { \"title\": \"Triple Sec\" }, { \"title\": \"Tropicana\" }, { \"title\": \"Tuaca\" }, { \"title\": \"Tuna\" }, { \"title\": \"Vanilla extract\" }, { \"title\": \"Vanilla Ice-Cream\" }, { \"title\": \"Vanilla liqueur\" }, { \"title\": \"Vanilla schnapps\" }, { \"title\": \"Vanilla syrup\" }, { \"title\": \"Vanilla vodka\" }, { \"title\": \"Vanilla\" }, { \"title\": \"Vegan Butter\" }, { \"title\": \"Vermouth\" }, { \"title\": \"Vinegar\" }, { \"title\": \"Vodka\" }, { \"title\": \"Water\" }, { \"title\": \"Watermelon schnapps\" }, { \"title\": \"Whipped Cream\" }, { \"title\": \"Whipping Cream\" }, { \"title\": \"Whiskey\" }, { \"title\": \"Whisky\" }, { \"title\": \"White chocolate liqueur\" }, { \"title\": \"White Creme de Menthe\" }, { \"title\": \"White grape juice\" }, { \"title\": \"White port\" }, { \"title\": \"White Rum\" }, { \"title\": \"White Vinegar\" }, { \"title\": \"White Wine\" }, { \"title\": \"Wild Turkey\" }, { \"title\": \"Wildberry schnapps\" }, { \"title\": \"Wine\" }, { \"title\": \"Worcestershire Sauce\" }, { \"title\": \"Wormwood\" }, { \"title\": \"Yeast\" }, { \"title\": \"Yellow Chartreuse\" }, { \"title\": \"Yoghurt\" }, { \"title\": \"Yukon Jack\" }, { \"title\": \"Zima\" }, { \"title\": \"Zucchini\" }]\r\n};","import React from 'react';\r\nimport '../css/InputTag.css';\r\n\r\nconst InputTag = ({ tagName, deleteTags }) => {\r\n\r\n    const onClickHandler = (e) => {\r\n        e.stopPropagation();\r\n        deleteTags(tagName);\r\n    }\r\n\r\n    return (\r\n        <span key={tagName} className='InputTag' onClick={onClickHandler}>\r\n            {tagName}\r\n        </span>\r\n    )\r\n};\r\n\r\nexport default InputTag;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport '../css/SearchBar.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport InputTag from \"./InputTag\";\r\n\r\nconst AutocompleteSearch = ({ ingredientsList, spinnerLoading, resetDrinkList, resetSpinner }) => {\r\n    const [ingredient, setIngredient] = useState(\"\");\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [ingredientsArr, setIngredientsArr] = useState([]);\r\n    const urlTerm = useParams();\r\n    const history = useHistory();\r\n    const urlTermsArr = Object.values(urlTerm);\r\n    const currentPath = history.location.pathname;\r\n\r\n    const [dropdownActive, setDropdownActive] = useState(false);\r\n    const wrapperRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n\r\n    const [placeholderTxt, setPlaceholderTxt] = useState('');\r\n\r\n    useEffect(() => {\r\n        setPlaceholder();\r\n    }, [ingredient, selectedItems]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        const urlTerms = [...urlTermsArr];\r\n        setPlaceholderTxt('');\r\n        setSelectedItems(urlTerms);\r\n        setIngredientsArr(cleanedIngredientsArr());\r\n    }, [urlTerm]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const limitedIngredientsArr = () => {\r\n        if (selectedItems.length === 3) {\r\n            return []\r\n        }\r\n        else {\r\n            return ingredientsArr;\r\n        };\r\n    };\r\n\r\n    const cleanedIngredientsArr = () => {\r\n        if (urlTermsArr.length === 0) {\r\n            return ingredientsList();\r\n        }\r\n        else {\r\n            const ingrArr = [...ingredientsList()];\r\n\r\n            urlTermsArr.forEach(ingr => {\r\n                var index = ingrArr.findIndex(x => x.title === ingr);\r\n                ingrArr.splice(index, 1);\r\n            });\r\n\r\n            return ingrArr;\r\n        };\r\n    };\r\n\r\n    const clearInputArea = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.innerText = '';\r\n        };\r\n    }\r\n\r\n    const deleteTags = (item) => {\r\n        const tags = [...selectedItems];\r\n        const index = tags.indexOf(item);\r\n        tags.splice(index, 1);\r\n        setSelectedItems(tags);\r\n\r\n        const ingrArr = [...ingredientsArr];\r\n\r\n        var ingrdient = {\r\n            title: item,\r\n        };\r\n\r\n        ingrArr.unshift(ingrdient);\r\n        setIngredientsArr(ingrArr);\r\n\r\n        inputRef.current && inputRef.current.focus();\r\n    };\r\n\r\n    const setPath = () => {\r\n        if (selectedItems.length === 0) {\r\n            history.push('/ingredients');\r\n        }\r\n        else if (urlTermsArr.length !== 0 || selectedItems.length !== 0) {\r\n            const constructedPath = selectedItems.join('/');\r\n            let pathname = `/ingredients/${constructedPath}`;\r\n\r\n            history.push(pathname);\r\n        }\r\n    };\r\n\r\n    const onButtonClickHandler = () => {\r\n        if (spinnerLoading === false || spinnerLoading === undefined) {\r\n            resetDrinkList(selectedItems);\r\n            resetSpinner(selectedItems);\r\n            setSelectedItems([]);\r\n            setPath();\r\n        }\r\n    };\r\n\r\n    const clearInput = () => {\r\n        setSelectedItems([]);\r\n        setIngredient('');\r\n        setIngredientsArr(ingredientsList());\r\n        clearInputArea();\r\n    }\r\n\r\n    const clearTextIcon = () => {\r\n        if (selectedItems.length !== 0 || ingredient !== '') {\r\n            return <i onClick={clearInput} className=\"fas fa-times clear-icon\"></i>\r\n        }\r\n        else {\r\n            return null;\r\n        };\r\n    };\r\n\r\n    const handleKeyPress = (target) => {\r\n        if (target.charCode === 13) {\r\n            if (spinnerLoading === false || spinnerLoading === undefined) {\r\n                resetDrinkList(selectedItems);\r\n                resetSpinner(selectedItems);\r\n                setSelectedItems([]);\r\n                setDropdownActive(false);\r\n                history.push(setPath());\r\n            }\r\n        };\r\n    };\r\n\r\n    const lockInputEnter = (e) => {\r\n        if (e.charCode === 13) {\r\n            e.preventDefault();\r\n        };\r\n    };\r\n\r\n    const setPlaceholder = () => {\r\n        if (ingredient === '' && selectedItems.length === 0) {\r\n            setPlaceholderTxt('Select an ingredient...')\r\n        }\r\n        else {\r\n            setPlaceholderTxt('');\r\n        }\r\n    };\r\n\r\n    const tagBackspaceDelete = (e) => {\r\n        if (ingredient === '') {\r\n            if (e.keyCode === 8) {\r\n                if (selectedItems.length > 0) {\r\n                    var lastElement = selectedItems[selectedItems.length - 1];\r\n                    deleteTags(lastElement)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', outsideClickHandler);\r\n        return () => {\r\n            document.removeEventListener('mousedown', outsideClickHandler);\r\n        };\r\n    }, []);\r\n\r\n    const outsideClickHandler = (e) => {\r\n        const { current: contentWrap } = wrapperRef;\r\n        if (contentWrap && !contentWrap.contains(e.target)) {\r\n            setDropdownActive(false);\r\n            clearInputArea();\r\n            setIngredient('');\r\n        };\r\n    };\r\n\r\n    const onChangeHandler = (e) => {\r\n        setDropdownActive(true);\r\n        setIngredient(e.currentTarget.textContent)\r\n    };\r\n\r\n    const onDropdownSelectHandler = (e) => {\r\n        setDropdownActive(false);\r\n        setIngredient('');\r\n        const arr = [...selectedItems];\r\n        arr.push(e.currentTarget.innerText);\r\n        setSelectedItems(arr);\r\n\r\n        const ingrArr = [...ingredientsArr];\r\n        var index = ingrArr.findIndex(x => x.title === e.currentTarget.innerText);\r\n        ingrArr.splice(index, 1);\r\n        setIngredientsArr(ingrArr);\r\n        clearInputArea();\r\n\r\n        if (selectedItems.length < 2) {\r\n            inputRef.current && inputRef.current.focus();\r\n        }\r\n    };\r\n\r\n    const onInputBarClick = () => {\r\n        if (dropdownActive === false) {\r\n            setDropdownActive(true);\r\n        }\r\n        else {\r\n            setDropdownActive(false);\r\n        };\r\n\r\n        inputRef.current && inputRef.current.focus();\r\n    };\r\n\r\n    const renderAutocomplete = () => {\r\n        if (dropdownActive === true) {\r\n\r\n            const input = ingredient;\r\n            const filteredIngredients = limitedIngredientsArr().filter(\r\n                ingredient =>\r\n                    ingredient.title.toLowerCase().indexOf(input.toLowerCase()) > -1\r\n            );\r\n\r\n            if (filteredIngredients.length) {\r\n                return (\r\n                    <ul className=\"dropdown\">\r\n                        {filteredIngredients.map((ingredient) => {\r\n                            return (\r\n                                <li className='item' key={ingredient.title} onClick={onDropdownSelectHandler}>\r\n                                    {ingredient.title}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n\r\n                    <div className=\"no-autocomplete\">\r\n                        {\r\n                            selectedItems.length < 3 ?\r\n                                <span>No options</span>\r\n                                : <span>Too many selected</span>\r\n                        }\r\n                    </div>\r\n                );\r\n            }\r\n        };\r\n    };\r\n\r\n    const setTags = selectedItems.map(item => (\r\n        <InputTag tagName={item} key={item} deleteTags={deleteTags} />\r\n    ));\r\n\r\n    return (\r\n        <div className='SearchBar' onKeyDown={tagBackspaceDelete} onKeyPress={(e) => handleKeyPress(e)}>\r\n            <div ref={wrapperRef} className='SearchBar-wrapper'>\r\n\r\n                <div className='search-background' onClick={onInputBarClick}>\r\n                    <div className='search-wrapper' >\r\n                        <div className='search-tags'>\r\n                            {setTags}\r\n                            <span\r\n                                onKeyPress={(e) => lockInputEnter(e)}\r\n                                onInput={e => onChangeHandler(e)}\r\n                                ref={inputRef}\r\n                                data-placeholder={placeholderTxt}\r\n                                className='search-input'\r\n                                contentEditable='true'>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {renderAutocomplete()}\r\n            </div>\r\n            <span className='button' onClick={onButtonClickHandler}>\r\n                <span className='default-btn-txt'>SEARCH</span>\r\n                <span className='mobile-btn-txt'><i className=\"fas fa-search\"></i></span>\r\n            </span>\r\n            {clearTextIcon()}\r\n        </div >\r\n    );\r\n}\r\nexport default AutocompleteSearch;","import React from 'react';\r\nimport { ingredientsList } from '../functions/IngredientsList';\r\nimport AutocompleteSearch from './AutocompleteSearch';\r\n\r\nconst AutocompleteBar = ({ spinnerLoading, resetDrinkList, resetSpinner }) => {\r\n    return (\r\n        <>\r\n            <AutocompleteSearch\r\n                ingredientsList={ingredientsList}\r\n                spinnerLoading={spinnerLoading}\r\n                resetDrinkList={resetDrinkList}\r\n                resetSpinner={resetSpinner}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default AutocompleteBar;","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../css/SuggestionsList.css';\r\n\r\nconst SuggestionsConfig = {\r\n    byName: ['Martini', 'Punch', 'Margarita', 'Tea', 'Mojito', 'Daiquiri'],\r\n    byIngredients: ['Cider', 'Coffee', 'Beer and 7-up', 'Rum, Vodka and Tequila', 'Mint',]\r\n}\r\n\r\nconst SuggestionsList = ({ resetDrinkList }) => {\r\n    const history = useHistory();\r\n    const termPresent = history.location.pathname.includes(\"ingredients\");\r\n\r\n    const setSuggestions = (termCheck) => {\r\n        if (termCheck === false) {\r\n            return SuggestionsConfig.byName;\r\n        }\r\n        else {\r\n            return SuggestionsConfig.byIngredients;\r\n        };\r\n    };\r\n\r\n    const setPath = (termCheck, suggestion) => {\r\n        if (termCheck === false) {\r\n            return `/${suggestion}`\r\n        }\r\n        else {\r\n            const removeSpaces = suggestion.replaceAll(' ', '');\r\n            const removeAnds = removeSpaces.replaceAll('and', '/');\r\n            const removeComma = removeAnds.replaceAll(',', '/');\r\n            const strPath = removeComma;\r\n\r\n            return `ingredients/${strPath}`\r\n        };\r\n    }\r\n\r\n    const suggestions = setSuggestions(termPresent).map((suggestion) => {\r\n        return (\r\n            <Link key={suggestion} onClick={resetDrinkList} to={setPath(termPresent, suggestion)} className='suggestion'>\r\n                {suggestion}\r\n            </Link>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className='SuggestionsList'>\r\n            <div className='suggestions-title'>Suggestions</div>\r\n            <div>{suggestions}</div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SuggestionsList;","import React from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport SuggestionsList from '../components/SuggestionsList';\r\nimport AutocompleteBar from '../components/AutocompleteBar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../css/WelcomePage.css';\r\nimport Logo from '../components/Logo';\r\n\r\nconst WelcomePage = ({ resetDrinkList, resetSpinner }) => {\r\n    const history = useHistory();\r\n    const currentPath = history.location.pathname;\r\n\r\n    const setSearchBar = () => {\r\n        if (currentPath.includes('/ingredients')) {\r\n            return <AutocompleteBar resetDrinkList={resetDrinkList} resetSpinner={resetSpinner} />\r\n        }\r\n        else {\r\n            return <SearchBar resetDrinkList={resetDrinkList} resetSpinner={resetSpinner} />\r\n        };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Logo />\r\n            <div className='WelcomePage-wrapper'>\r\n                <div className='WelcomePage'>\r\n                    <div className='title'>What would you like to drink?</div>\r\n                    <div className='SearchBarWrapper'>\r\n                        {setSearchBar()}\r\n                    </div>\r\n\r\n                    <NavigationBar />\r\n                    <SuggestionsList resetDrinkList={resetDrinkList} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WelcomePage;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport DrinksDisplay from '../components/DrinksDisplay';\r\nimport SearchBar from '../components/SearchBar';\r\nimport AutocompleteBar from '../components/AutocompleteBar';\r\nimport WelcomePage from './WelcomePage';\r\nimport Logo from '../components/Logo';\r\nimport queryString from 'query-string';\r\nimport '../css/ApplicationPage.css';\r\n\r\nconst ApplicationPage = ({ dataLoaded, resetDrinkList, drinksData, unfilteredDrinksData, urlTerm, initialData, currentTerm }) => {\r\n    const history = useHistory();\r\n    const currentPath = history.location.pathname;\r\n    const [loading, setLoading] = useState(true);\r\n    const counter = useRef(0);\r\n    const urlStats = useLocation();\r\n    const queryList = queryString.parse(urlStats.search);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [drinksPerPage] = useState(12);\r\n    const indexOfLastDrink = currentPage * drinksPerPage;\r\n    const indexOfFirstDrink = indexOfLastDrink - drinksPerPage;\r\n    const currentDrinks = drinksData.slice(indexOfFirstDrink, indexOfLastDrink);\r\n\r\n    const imageLoaded = () => {\r\n        counter.current += 1;\r\n        if (counter.current >= currentDrinks.length) {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (queryList.page === undefined) {\r\n            setCurrentPage(1)\r\n        }\r\n        else {\r\n            setCurrentPage(queryList.page)\r\n        }\r\n    }, [queryList.page])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(urlTerm).length <= 1 || currentTerm !== urlTerm.ing1) {\r\n            setLoading(true);\r\n        }\r\n    }, [currentPath]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const resetSpinner = (selectedItems) => {\r\n        if (selectedItems === undefined || selectedItems.length <= 1) {\r\n            setLoading(true);\r\n        }\r\n        else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const resetSpinnerPag = () => {\r\n        setLoading(true);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (dataLoaded === false) {\r\n            setLoading(false);\r\n        }\r\n        else if (dataLoaded === true && currentDrinks.length === 0) {\r\n            setLoading(false);\r\n        }\r\n    }, [dataLoaded]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const setSearchBar = () => {\r\n        if (currentPath.includes('/ingredients')) {\r\n            return <AutocompleteBar spinnerLoading={loading} resetDrinkList={resetDrinkList} resetSpinner={resetSpinner} />\r\n        }\r\n        else {\r\n            return <SearchBar resetDrinkList={resetDrinkList} resetSpinner={resetSpinner} />\r\n        };\r\n    };\r\n\r\n    const setBackground = () => {\r\n        if (currentDrinks.length !== 0 && loading === false) {\r\n            return 'main-content';\r\n        }\r\n        else {\r\n            return '';\r\n        };\r\n    };\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <div className='ApplicationPage'>\r\n            {Object.values(urlTerm).length !== 0 ?\r\n                <>\r\n                    <Logo />\r\n                    <div className='SearchBarWrapper' >\r\n                        {setSearchBar()}\r\n                    </div>\r\n\r\n                    <NavigationBar />\r\n\r\n                    <div className='whitespace'></div>\r\n\r\n                    <div className={setBackground()}>\r\n                        <DrinksDisplay\r\n                            drinksData={currentDrinks}\r\n                            totalDrinksData={drinksData}\r\n                            unfilteredDrinksData={unfilteredDrinksData}\r\n                            initialData={initialData}\r\n                            currentTerm={currentTerm}\r\n                            loading={loading}\r\n                            imageLoaded={imageLoaded}\r\n                            paginate={paginate}\r\n                            drinksPerPage={drinksPerPage}\r\n                            totalDrinks={drinksData}\r\n                            resetSpinnerPag={resetSpinnerPag}\r\n                        />\r\n                    </div>\r\n                </>\r\n                : <WelcomePage resetDrinkList={resetDrinkList} resetSpinner={resetSpinner} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApplicationPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { filterByQuery, updateDrinkDataValues } from '../functions/Utils';\r\nimport { getDrinksbyName } from '../api/thecocktaildb';\r\nimport ApplicationPage from './ApplicationPage';\r\n\r\nconst HomePage = () => {\r\n    const [drinksData, setDrinksData] = useState([]);\r\n    const urlTerm = useParams();\r\n    const urlStats = useLocation();\r\n    const queryList = queryString.parse(urlStats.search);\r\n    const queryArray = Object.values(queryList).flat(1);\r\n\r\n    const filteredDrinksData = filterByQuery(drinksData, queryArray)\r\n\r\n    const [dataLoaded, setDataLoaded] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const setUrlTerm = () => {\r\n        let term = null;\r\n\r\n        if (urlTerm.urlTerm === undefined) {\r\n            term = {};\r\n        }\r\n        else {\r\n            term = { ...urlTerm.urlTerm }\r\n        };\r\n\r\n        return term;\r\n    };\r\n\r\n    const resetDrinkList = () => {\r\n        setDrinksData([]);\r\n        setDataLoaded(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (history.location.pathname !== '/') {\r\n            setDataLoaded(null);\r\n            const getDrinks = async () => {\r\n                const data = await getDrinksbyName('https://www.thecocktaildb.com/api/json/v1/1/search.php', urlTerm.urlTerm);\r\n\r\n                if (data.drinks !== null) {\r\n                    updateDrinkDataValues(data.drinks);\r\n                    setDrinksData(data.drinks);\r\n                    setDataLoaded(true);\r\n                }\r\n                else {\r\n                    setDataLoaded(false);\r\n                    setDrinksData([]);\r\n                }\r\n            };\r\n            getDrinks();\r\n        }\r\n        else {\r\n            resetDrinkList();\r\n        }\r\n    }, [urlTerm]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <ApplicationPage dataLoaded={dataLoaded} resetDrinkList={resetDrinkList} drinksData={filteredDrinksData} unfilteredDrinksData={drinksData} urlTerm={setUrlTerm()} initialData={drinksData} />\r\n    )\r\n};\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { filterByQuery, filterByUrlTerms, updateDrinkDataValues } from '../functions/Utils';\r\nimport { getDrinksbyIngredient } from '../api/thecocktaildb';\r\nimport ApplicationPage from './ApplicationPage';\r\n\r\nconst IngredientsPage = () => {\r\n    const [drinksData, setDrinksData] = useState([]);\r\n    const urlTerm = useParams();\r\n    const urlStats = useLocation();\r\n    const queryList = queryString.parse(urlStats.search);\r\n    const queryArray = Object.values(queryList).flat(1);\r\n\r\n    const filteredDrinksData = filterByUrlTerms(filterByQuery(drinksData, queryArray), urlTerm);\r\n    const unfilteredDrinksData = filterByUrlTerms(drinksData, urlTerm)\r\n\r\n    const [currentTerm, setCurrentTerm] = useState(null);\r\n    const [dataLoaded, setDataLoaded] = useState(null);\r\n\r\n\r\n    const resetDrinkList = (urlData) => {\r\n        if (urlData.length <= 1) {\r\n            setDrinksData([]);\r\n        }\r\n        setDataLoaded(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(urlTerm).length !== 0) {\r\n            setCurrentTerm(Object.values(urlTerm)[0])\r\n            if (drinksData.length === 0 || Object.values(urlTerm)[0] !== currentTerm) {\r\n                setDrinksData([]);\r\n                setDataLoaded(null);\r\n                const getDrinks = async () => {\r\n                    const searchTerm = Object.values(urlTerm)[0];\r\n                    const data = await getDrinksbyIngredient('https://www.thecocktaildb.com/api/json/v1/1/filter.php', searchTerm);\r\n\r\n                    if (data.drinks !== undefined) {\r\n                        let drinkList = [];\r\n                        let promises = [];\r\n                        for (let i = 0; i < data.drinks.length; i++) {\r\n                            const searchTermEach = data.drinks[i].idDrink;\r\n                            promises.push(\r\n                                getDrinksbyIngredient('https://www.thecocktaildb.com/api/json/v1/1/lookup.php', searchTermEach).then(response => {\r\n                                    drinkList.push(response.drinks[0]);\r\n                                })\r\n                            )\r\n                        }\r\n                        Promise.all(promises).then(() => {\r\n                            updateDrinkDataValues(drinkList);\r\n                            setDrinksData(drinkList)\r\n                            setDataLoaded(true);\r\n\r\n                        });\r\n                    }\r\n                    else {\r\n                        setDataLoaded(false);\r\n                    }\r\n\r\n                };\r\n                getDrinks();\r\n            };\r\n        }\r\n        else {\r\n            setDrinksData([]);\r\n        }\r\n    }, [urlTerm]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <ApplicationPage dataLoaded={dataLoaded} resetDrinkList={resetDrinkList} drinksData={filteredDrinksData} unfilteredDrinksData={unfilteredDrinksData} urlTerm={urlTerm} initialData={drinksData} currentTerm={currentTerm} />\r\n    )\r\n};\r\n\r\nexport default IngredientsPage;","import { useEffect } from \"react\";\r\n\r\nconst Page = (props) => {\r\n    useEffect(() => {\r\n        document.title = props.title || \"\";\r\n    }, [props.title]);\r\n    return props.children;\r\n};\r\n\r\nexport default Page;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport DrinkDetails from './components/DrinkDetails';\r\nimport HomePage from './pages/HomePage';\r\nimport IngredientsPage from './pages/IngredientsPage';\r\nimport Page from './components/Page.js';\r\n\r\nconst App = () => {\r\n    console.warn = () => { };\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/ingredients/:ing1/:ing2/:ing3\"\r\n                    render={(props) => (\r\n                        <Page title={`[${props.match.params.ing1}, ${props.match.params.ing2}, ${props.match.params.ing3}] Results from Drinks Base`}>\r\n                            <IngredientsPage {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/ingredients/:ing1/:ing2\"\r\n                    render={(props) => (\r\n                        <Page title={`[${props.match.params.ing1}, ${props.match.params.ing2}] Results from Drinks Base`}>\r\n                            <IngredientsPage {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/ingredients/:ing1\"\r\n                    render={(props) => (\r\n                        <Page title={`[${props.match.params.ing1}] Results from Drinks Base`}>\r\n                            <IngredientsPage {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/ingredients\"\r\n                    render={(props) => (\r\n                        <Page title={'Drinks Base - Search by Ingredients'}>\r\n                            <IngredientsPage {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/details/:drinkId\"\r\n                    render={(props) => (\r\n                        <Page title={`Drinks ID [${props.match.params.drinkId}] Recipe`}>\r\n                            <DrinkDetails {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/:urlTerm\"\r\n                    render={(props) => (\r\n                        <Page title={`[${props.match.params.urlTerm}] Results from Drinks Base`}>\r\n                            <HomePage {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/\"\r\n                    render={(props) => (\r\n                        <Page title={'Drinks Base - Search by Name'}>\r\n                            <HomePage {...props} />\r\n                        </Page>\r\n                    )}\r\n                />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}